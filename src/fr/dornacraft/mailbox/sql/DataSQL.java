package fr.dornacraft.mailbox.sql;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import fr.dornacraft.mailbox.Data;

public class DataSQL extends DAO<Data> {
	
	private final String TABLE_NAME = "MAilBox_Data";
	
	/*
	 * table name format ?:
	 *  - [id: int] [author: String] [object: String] [creationDate: Date]
	 * 
	 */
	
	
	@Override
	public Data create(Data obj) {
		Data res = null;
		
		try {
			PreparedStatement query = super.getConnection().prepareStatement("INSERT INTO " + TABLE_NAME + " (author, object, creationDate) VALUES(?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
			query.setString(1, obj.getAuthor());
			query.setString(2, obj.getObject());
			query.setDate(3, obj.getCreationDate() );

			query.executeUpdate();

			ResultSet tableKeys = query.getGeneratedKeys();
			Integer autoGeneratedID = tableKeys.getInt(1);
			if(tableKeys.next()) {
				autoGeneratedID = tableKeys.getInt(1);
			}
			
			obj.setId(autoGeneratedID);
			
			query.execute();
			query.close();
			res = obj;

		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return res;
	}

	@Override
	public Data find(Data obj) {//TODO fin(Integer id) (changer en long)
		Data res = null;
		
		try {
			PreparedStatement query = super.getConnection().prepareStatement("SELECT * FROM " + TABLE_NAME + " WHERE id = ?");
			query.setInt(1, obj.getId());
			ResultSet resultset = query.executeQuery();
			
			if(resultset.next() ) {
				res = obj;
			}
			query.close();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return res;
	}
	
	@Override
	public Data update(Data obj) {
		Data res = null;
		try {
			PreparedStatement query = super.getConnection().prepareStatement("UPDATE " + TABLE_NAME + " author = ?, object = ?, creationDate = ? WHERE id = ?");
			query.setString(1, obj.getAuthor());
			query.setString(2, obj.getObject());
			query.setDate(3, obj.getCreationDate());
			query.setInt(4, obj.getId());

			query.executeUpdate();
			query.close();
			res = obj;

		} catch (SQLException e) {
			e.printStackTrace();
		}

		return res;
	}

	@Override
	public void delete(Data obj) {
		try {
			PreparedStatement query = super.getConnection().prepareStatement("DELETE FROM " + TABLE_NAME + " WHERE id = ?");
			query.setInt(1,  obj.getId());
			query.execute();
			query.close();

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
}
